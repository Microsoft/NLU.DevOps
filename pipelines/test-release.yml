trigger:
  branches:
    exclude:
    - '*'

stages:
- stage: Test
  jobs:
  - job: testextension 
    steps:
    - task: NLUTrain@0
      inputs: 
        service: luis
        modelSettings: models/luismodel.json
    - task: NLUTest@0
      inputs:
        service: luis
        utterances: models/test.json
        publishTestResults: true
    - task: NLUClean@0
      inputs:
        service: luis  

- stage: Release
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: releaseextension
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NPM@1
      displayName: npm install
      inputs:
        command: install
        workingDir: extensions

    - task: NPM@1
      displayName: npm run lint
      inputs:
        command: custom
        customCommand: run lint
        workingDir: extensions

    - task: NPM@1
      displayName: npm run build
      inputs:
        command: custom
        customCommand: run build
        workingDir: extensions

    - task: CopyFiles@2
      displayName: Stage extension artifact for publish
      inputs:
        sourceFolder: extensions
        contents: '**/*.vsix'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishPipelineArtifact@0
      displayName: Publish extension artifact
      inputs:
        artifactName: drop
        targetPath: $(Build.ArtifactStagingDirectory)

    - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@2
      displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'

    - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishAzureDevOpsExtension@2
      displayName: 'Publish Extension'
      inputs:
        connectedServiceName: marketplaceConnection
        fileType: vsix
        vsixFile: '**/*.vsix'
        publisherId: NLUDevOps
        extensionVersion: '0.1.$(Build.BuildId)'
        updateTasksVersion: true
        extensionVisibility: public
